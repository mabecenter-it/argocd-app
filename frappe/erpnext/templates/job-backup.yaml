{{- if .Values.jobs.backup.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  {{- if .Values.jobs.backup.jobName }}
  name: {{ .Values.jobs.backup.jobName }}
  {{- else }}
  name: {{ template "erpnext.fullname" . }}-backup-{{ now | date "20060102150405" }}
  {{- end }}
  labels:
    {{- include "erpnext.labels" . | nindent 4 }}
spec:
  backoffLimit: {{ .Values.jobs.backup.backoffLimit }}
  template:
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "erpnext.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
      - name: backup
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["bash", "-c"]
        args:
          - >
            bench --site=$(SITE_NAME)
          {{- if .Values.jobs.backup.withFiles }}
            backup --with-files;
          {{- else }}
            backup;
          {{- end }}
          {{- if .Values.jobs.backup.push.enabled }}
            echo "Site Name: $SITE_NAME";
            echo "Backup Files: $(ls /home/frappe/frappe-bench/sites/$SITE_NAME/private/backups/ | grep -E '^backup.*\.tar$' | tail -n 1)";
            echo "Filtered Backup Files: $(ls /home/frappe/frappe-bench/sites/$SITE_NAME/private/backups/ | grep -E '^backup.*\.tar$')";
            BACKUP_FILE=$(ls /home/frappe/frappe-bench/sites/$SITE_NAME/private/backups/ | grep -E '^backup.*\.tar$' | tail -n 1);
            echo "Selected Backup File: $BACKUP_FILE";
            SIGNATURE=$(echo -n "PUT\n\n\n$BACKUP_FILE\n\napplication/octet-stream" | openssl sha1 -hmac $SECRET_KEY | openssl base64 -A);
            curl -X PUT "{{ .Values.jobs.backup.push.endpoint }}/{{ .Values.jobs.backup.push.bucket }}/$BACKUP_FILE" \
            -H "Content-Type: application/octet-stream" \
            -H "Authorization: AWS $ACCESS_KEY:$SIGNATURE" \
            --upload-file /home/frappe/frappe-bench/sites/$SITE_NAME/private/backups/$BACKUP_FILE;
          {{- end }}
        env:
          - name: "SITE_NAME"
            value: "{{ .Values.jobs.backup.siteName }}"
          - name: "ACCESS_KEY"
            value: "{{ .Values.jobs.backup.push.accessKey }}"
          - name: "SECRET_KEY"
            value: "{{ .Values.jobs.backup.push.secretKey }}"
        resources:
          {{- toYaml .Values.jobs.backup.resources | nindent 10 }}
        securityContext:
          {{- toYaml $.Values.securityContext | nindent 10 }}
        volumeMounts:
          - name: sites-dir
            mountPath: /home/frappe/frappe-bench/sites
          - name: logs
            mountPath: /home/frappe/frappe-bench/logs
      restartPolicy: Never
      volumes:
        - name: sites-dir
          {{- if .Values.persistence.worker.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.worker.existingClaim }}
            claimName: {{ .Values.persistence.worker.existingClaim }}
            {{- else }}
            claimName: {{ template "erpnext.fullname" . }}
            {{- end }}
            readOnly: false
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: logs
          {{- if .Values.persistence.logs.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.logs.existingClaim }}
            claimName: {{ .Values.persistence.logs.existingClaim }}
            {{- else }}
            claimName: {{ template "erpnext.fullname" . }}-logs
            {{- end }}
            readOnly: false
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.jobs.backup.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobs.backup.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobs.backup.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
