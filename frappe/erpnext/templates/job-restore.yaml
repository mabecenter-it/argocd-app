{{- if .Values.jobs.restore.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  {{- if .Values.jobs.restore.jobName }}
  name: {{ .Values.jobs.restore.jobName }}
  {{- else }}
  name: {{ template "erpnext.fullname" . }}-restore-{{ now | date "20060102150405" }}
  {{- end }}
  labels:
    {{- include "erpnext.labels" . | nindent 4 }}
spec:
  backoffLimit: {{ .Values.jobs.restore.backoffLimit }}
  template:
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "erpnext.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
      - name: restore
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["bash", "-c"]
        args:
          - >
            # Paso 1: Obtener el Folder Más Reciente
            FOLDER=$(curl -s http://store-hl.storage.svc.cluster.local:9000/backups/erpnext/?list-type=2 | grep "<Key>" | sed -n "s:.*<Key>\(.*\)</Key>.*:\1:p" | sort | tail -n 1 | cut -d'/' -f1)

            echo "Selected folder: $FOLDER"

            # Paso 2: Listar Archivos Dentro del Folder
            FILES=$(curl -s http://store-hl.storage.svc.cluster.local:9000/backups/erpnext/?list-type=2 | \
              grep "<Key>" | \
              sed -n 's:.*<Key>\(.*\)</Key>.*:\1:p' | \
              grep "^$FOLDER/")

            echo "Files to download:"
            echo "$FILES"

            # Paso 3: Descargar Cada Archivo
            for FILE in $FILES; do
              echo "Downloading $FILE"
              curl -o "/home/frappe/restore/$(basename $FILE)" \
                "http://store-hl.storage.svc.cluster.local:9000/backups/erpnext/$FILE" \
                --user "minio:minio123"
            done

            # Paso 4: Descomprimir y Restaurar la Base de Datos
            gunzip /home/frappe/restore/*-database.sql.gz
            bench --site erp.cluster.local restore /home/frappe/restore/*-database.sql --force

            # Paso 5: Extraer Archivos Públicos y Privados
            tar -xvf /home/frappe/restore/*-files.tar -C /home/frappe/frappe-bench/sites/erp.cluster.local/public
            tar -xvf /home/frappe/restore/*-private-files.tar -C /home/frappe/frappe-bench/sites/erp.cluster.local/private

            echo "Restore completed successfully!"
        env:
          - name: "SITE_NAME"
            value: "{{ .Values.jobs.restore.siteName }}"
        resources:
          {{- toYaml .Values.jobs.restore.resources | nindent 10 }}
        securityContext:
          {{- toYaml $.Values.securityContext | nindent 10 }}
        volumeMounts:
          - name: sites-dir
            mountPath: /home/frappe/frappe-bench/sites
          - name: logs
            mountPath: /home/frappe/frappe-bench/logs
          - name: restore-dir
            mountPath: /home/frappe/restore
      restartPolicy: Never
      volumes:
        - name: sites-dir
          {{- if .Values.persistence.worker.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.worker.existingClaim }}
            claimName: {{ .Values.persistence.worker.existingClaim }}
            {{- else }}
            claimName: {{ template "erpnext.fullname" . }}
            {{- end }}
            readOnly: false
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: logs
          {{- if .Values.persistence.logs.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.logs.existingClaim }}
            claimName: {{ .Values.persistence.logs.existingClaim }}
            {{- else }}
            claimName: {{ template "erpnext.fullname" . }}-logs
            {{- end }}
            readOnly: false
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: restore-dir
          emptyDir: {}
      {{- with .Values.jobs.restore.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobs.restore.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobs.restore.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}